import numpy as np
import matplotlib.pylab as plt
import pandas as pd
import glob
import sys
# Try out my tool to output pub-ready and slide-ready at same time
sys.path.append("/Users/yoachim/gitRepos/matplotlib_pubplots/python")
import set_plot_params as spp
from make_plots import plot_example_networks

class phd_db(object):
    """
    Class to read in saved pandas data frames and then generate useful plots.
    """

    def __init__(self):

        filenames = glob.glob('phd_store*.h5')
        self.data_df = pd.read_hdf(filenames[0], 'author_df')
        for filename in filenames[1:]:
            temp = pd.read_hdf(filename, 'author_df')
            self.data_df =  self.data_df.append(temp, ignore_index=True)

        # make a dataframe that is just US astro PhDs
        self.astro_df = self.data_df[(self.data_df['nonUS'] == False) &
                                     (self.data_df['astroPublication'] == True)]
    def print_stats(self):
        """
        Print some basic stats about the papers
        """
        print 'Total number of PhDs found = %i' % len(self.data_df.index)
        print 'Total USA Astro PhDs found = %i' % len(self.astro_df.index)

    def plot_phds_per_year(self):
        """
        Return a matplotlib figure and base filename.
        """
        fig,ax = plt.subplots()
        years = self.astro_df['phd_year'].values
        bins = np.arange(years.min(), years.max()+2, 1) - 0.5
        blah = ax.hist(years, bins)
        ax.set_xlabel('Year')
        ax.set_ylabel('Number of US Astro PhDs')

        return [fig], ['phdsperyear']


    def plot_retention_curve(self):
        fig,ax = plt.subplots()
        # need to convert "array-of-lists" to 2D array.
        linked_hist = np.array(self.astro_df['linked_hist'].values.tolist())



if __name__ == '__main__':

    # Read in the dataframe generated by generate_db.py
    ack = phd_db()
    ack.print_stats()

    plot_funcs = []
    kwargs = []

    plot_funcs.append(ack.plot_phds_per_year)
    kwargs.append({})

    plot_funcs.append(plot_example_networks)
    kwargs.append({})

    # Wow, I am getting a much better looking histogram of
    # number of astro phds per year than before.  Need to spot check
    # some of the 2008 ones to see if they are real.


    spp.plot_multi_format(plot_funcs, plot_kwargs=kwargs,
                          usetex=False, outdir='../new_plots')
